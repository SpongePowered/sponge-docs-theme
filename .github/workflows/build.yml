name: Build and Publish

on:
  push:
    branches: [ master ]
    tags: [ '**' ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x]
        python-version: [3.x]

    steps:
    - uses: actions/checkout@v2
    - name: Cache npm dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Cache pip dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Setup Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install NPM dependencies
      run: npm ci
    - name: Install Python dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
    - name: Build
      run: npm run build

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags')
    steps:
    - uses: actions/checkout@v2
    - name: Cache npm dependencies
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: Cache pip dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Setup Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14 
    - name: Setup Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: 3.x
    - name: Install NPM dependencies
      run: npm ci
    - name: Install Python dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install setuptools wheel twine
    - name: Build for publishing
      run: |
          ./node_modules/.bin/gulp clean
          ./node_modules/.bin/gulp theme:build
    - name: Setup for publishing
      run: python setup.py sdist bdist_wheel
    - name: Publish
      run: twine upload dist/*.*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
