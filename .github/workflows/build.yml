name: Build and Publish

on:
  push:
    branches: [ master ]
    tags: [ '**' ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        cache: 'npm'
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        cache: 'pip'
    - name: Install NPM dependencies
      run: npm ci
    - name: Install Python dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
    - name: Build
      run: npm run build

  publish-pypi:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags')
    steps:
    - uses: actions/checkout@v3
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        cache: 'npm'
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
        cache: 'pip'
    - name: Install NPM dependencies
      run: npm ci
    - name: Install Python dependencies
      run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install setuptools wheel twine
    - name: Build for publishing
      run: |
          ./node_modules/.bin/gulp clean
          ./node_modules/.bin/gulp theme:build
    - name: Setup for publishing
      run: python setup.py sdist bdist_wheel
    - name: Publish
      run: twine upload dist/*.*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}

  publish-docker:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
    - name: Docker Metadata
      id: docker_meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/spongepowered/sponge-docs-theme
        tags: |
          latest
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to ghcr.io
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        build-args: |
          GITHUB_USER=${{ github.actor }}
          GITHUB_TOKEN=${{ github.token }}
          CROWDIN_TOKEN=${{ secrets.CROWDIN_TOKEN }}
          CROWDIN_PROJECT_ID=${{ secrets.CROWDIN_PROJECT_ID }}
          CROWDIN_BASE_URL=https://spongepowered.crowdin.com
          BASE_URL=https://docs.spongepowered.org
